name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - c_compiler: gcc
            cpp_compiler: g++
          - c_compiler: clang
            cpp_compiler: clang++
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential clang libncurses-dev

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  build-linux-containers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [fedora, arch, debian]
        build_type: [Release]
        include:
          - os: fedora
            container: fedora:latest
            cpp_compiler: g++
            c_compiler: gcc
            install: dnf install -y cmake make gcc-c++ clang ncurses-devel
          - os: arch
            container: archlinux:base
            cpp_compiler: g++
            c_compiler: gcc
            install: pacman -Sy --noconfirm cmake base-devel clang ncurses
          - os: debian
            container: debian:latest
            cpp_compiler: g++
            c_compiler: gcc
            install: apt update && apt install -y cmake build-essential clang libncurses-dev

    container: ${{ matrix.container }}

    steps:
      - name: Install dependencies
        run: ${{ matrix.install }}

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Debug workspace path inside container
        run: ls

      - name: Set reusable strings
        id: strings
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure
